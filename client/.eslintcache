[{"/Users/luis/GA/unit3/tms/TMS/client/src/index.js":"1","/Users/luis/GA/unit3/tms/TMS/client/src/App.js":"2","/Users/luis/GA/unit3/tms/TMS/client/src/components/TextInput.js":"3","/Users/luis/GA/unit3/tms/TMS/client/src/components/NavBar.js":"4","/Users/luis/GA/unit3/tms/TMS/client/src/services/TellerServices.js":"5","/Users/luis/GA/unit3/tms/TMS/client/src/services/ApiClient.js":"6","/Users/luis/GA/unit3/tms/TMS/client/src/components/Router.js":"7","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/MainPage.js":"8","/Users/luis/GA/unit3/tms/TMS/client/src/components/SearchBy.js":"9","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/NewTeller.js":"10","/Users/luis/GA/unit3/tms/TMS/client/src/components/RadioButtons.js":"11","/Users/luis/GA/unit3/tms/TMS/client/src/services/CustomerServices.js":"12","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/CustomerInfo.js":"13","/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerCard.js":"14","/Users/luis/GA/unit3/tms/TMS/client/src/components/AccountView.js":"15","/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerNavBar.js":"16","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/CustomerActions.js":"17","/Users/luis/GA/unit3/tms/TMS/client/src/store/types.js":"18","/Users/luis/GA/unit3/tms/TMS/client/src/store/index.js":"19","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/CustomerReducer.js":"20","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Withdraw.js":"21","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/AccountReducer.js":"22","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/AccountActions.js":"23","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/SignInPage.js":"24","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/TellerActions.js":"25","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/TellerReducer.js":"26","/Users/luis/GA/unit3/tms/TMS/client/src/services/AccountServices.js":"27","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/deposit.js":"28","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Deposit.js":"29","/Users/luis/GA/unit3/tms/TMS/client/src/components/BalanceSheet.js":"30","/Users/luis/GA/unit3/tms/TMS/client/src/components/PopUp.js":"31","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Drawer.js":"32"},{"size":448,"mtime":1609952790858,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1609952627524,"results":"35","hashOfConfig":"34"},{"size":627,"mtime":1610387161794,"results":"36","hashOfConfig":"34"},{"size":1993,"mtime":1611380841752,"results":"37","hashOfConfig":"34"},{"size":658,"mtime":1610399547347,"results":"38","hashOfConfig":"34"},{"size":769,"mtime":1610373670195,"results":"39","hashOfConfig":"34"},{"size":1727,"mtime":1611504059164,"results":"40","hashOfConfig":"34"},{"size":531,"mtime":1611504072553,"results":"41","hashOfConfig":"34"},{"size":4618,"mtime":1611504050046,"results":"42","hashOfConfig":"34"},{"size":2826,"mtime":1611380410811,"results":"43","hashOfConfig":"34"},{"size":2323,"mtime":1609867029883,"results":"44","hashOfConfig":"34"},{"size":448,"mtime":1609963948792,"results":"45","hashOfConfig":"34"},{"size":1120,"mtime":1611504278891,"results":"46","hashOfConfig":"34"},{"size":1323,"mtime":1611418046819,"results":"47","hashOfConfig":"34"},{"size":2292,"mtime":1611504637389,"results":"48","hashOfConfig":"34"},{"size":1957,"mtime":1611379908102,"results":"49","hashOfConfig":"34"},{"size":733,"mtime":1611379774156,"results":"50","hashOfConfig":"34"},{"size":1636,"mtime":1611439848757,"results":"51","hashOfConfig":"34"},{"size":584,"mtime":1610034516717,"results":"52","hashOfConfig":"34"},{"size":1133,"mtime":1611380006139,"results":"53","hashOfConfig":"34"},{"size":5215,"mtime":1611628157160,"results":"54","hashOfConfig":"34"},{"size":1725,"mtime":1611620908100,"results":"55","hashOfConfig":"34"},{"size":1046,"mtime":1611503987226,"results":"56","hashOfConfig":"34"},{"size":2146,"mtime":1611380386202,"results":"57","hashOfConfig":"34"},{"size":838,"mtime":1611380488968,"results":"58","hashOfConfig":"34"},{"size":1151,"mtime":1611380283307,"results":"59","hashOfConfig":"34"},{"size":656,"mtime":1611505601770,"results":"60","hashOfConfig":"34"},{"size":0,"mtime":1610127919075,"results":"61","hashOfConfig":"34"},{"size":5234,"mtime":1611628717757,"results":"62","hashOfConfig":"34"},{"size":4404,"mtime":1611380533644,"results":"63","hashOfConfig":"34"},{"size":976,"mtime":1610395084662,"results":"64","hashOfConfig":"34"},{"size":4877,"mtime":1611380514144,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"qt3xuh",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},"/Users/luis/GA/unit3/tms/TMS/client/src/index.js",[],["141","142"],"/Users/luis/GA/unit3/tms/TMS/client/src/App.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/TextInput.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/NavBar.js",["143","144"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Tab from '@material-ui/core/Tab';\nimport '../styles/Nav.css'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ClearUser } from '../store/actions/TellerActions'\n\nconst NavBar = (props) => {\n\n    let admin = props.tellerState.currentUser[0].admin\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTab: {\n                root: {\n                    fontSize: '1.25rem',\n                    borderTop: '2px solid black',\n                    borderBottom: '2px solid black',\n                    borderLeft: '1px solid black',\n                    borderRight: '1px solid black',\n                    borderRadius: \"2%\",\n                    marginRight: \".001em\"\n                },\n            },\n        },\n    });\n\n    const handleClick = ()=> {\n        props.clearUser()\n    }\n\n    return admin ? (\n        <div className=\"nav-bar\">\n            <ThemeProvider theme={theme}>\n                <Tab to=\"/newTeller\" component={Link} label=\"New Teller\" className=\"link\" to=\"newTeller\" />\n\n                <Tab to=\"/\" component={Link} label=\"Sign Out\" className=\"link\" />\n\n            </ThemeProvider>\n        </div>\n    ) : (\n            <ThemeProvider theme={theme} >\n                <div className=\"nav-bar\">\n                    <Tab label=\"Close Day\" className=\"link\" />\n                    <Tab to=\"/drawer\" component={Link} label=\"Drawer\" className=\"link\" />\n                    <Tab to=\"/\" component={Link} label=\"Sign Out\" className=\"link\" onClick={handleClick}/>\n                </div>\n\n            </ThemeProvider>\n        )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerState: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        clearUser: () => dispatch(ClearUser())\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(NavBar)\n\n\n\n\n\n\n\n\n\n\n","/Users/luis/GA/unit3/tms/TMS/client/src/services/TellerServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/services/ApiClient.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/Router.js",["145"],"import React, { useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport MainPage from '../Pages/MainPage'\nimport NewTeller from '../Pages/NewTeller'\nimport CustomerInfo from '../Pages/CustomerInfo'\nimport Withdraw from '../Pages/Withdraw'\nimport SignInPage from '../Pages/SignInPage'\nimport Deposit from '../Pages/Deposit'\nimport Drawer from '../Pages/Drawer'\n\nconst Router = () => {\n\n\n\n\n    return (\n        <main>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    component={(props) => <SignInPage {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/main\"\n                    component={(props) => <MainPage {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/newTeller\"\n                    component={(props) => <NewTeller {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/customerInfo\"\n                    component={(props) => <CustomerInfo {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/withdraw\"\n                    component={(props) => <Withdraw {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/deposit\"\n                    component={(props) => <Deposit {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/drawer\"\n                    component={(props) => <Drawer {...props} />}\n                />\n            </Switch>\n        </main>\n    )\n}\n\nexport default Router","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/MainPage.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/SearchBy.js",["146","147","148"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from './TextInput'\nimport { __GetCustomer, __GetCustomerAccounts } from '../services/CustomerServices'\n\nimport {\n    AddCustomer,\n    SearchTerm,\n    AddFirstName,\n    AddLastName,\n    AddDob\n} from '../store/actions/CustomerActions'\nimport { SetAccounts } from '../store/actions/AccountActions'\nimport '../styles/Search.css'\n\n\nconst SearchBy = (props) => {\n\n\n    const handleChange = (e) => {\n\n        switch (e.target.name) {\n            case \"account\":\n                props.search(e.target.value)\n                return\n            case \"firstName\":\n                props.setFirstName(e.target.value)\n                return\n            case \"lastName\":\n                props.setLastName(e.target.value)\n                return\n            case \"dob\":\n                props.setDob(e.target.value)\n                return\n        }\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let customerId = props.customerState.searchTerm\n        try {\n            const response1 = await __GetCustomer({ customerId })\n            if (response1) {\n                const response2 = await __GetCustomerAccounts({ customerId })\n                props.addCustomer(response1)\n                props.setAccounts(response2[0][\"Checkings\"], response2[0][\"Savings\"])\n                props.history.push('/customerInfo')\n            }\n            else {\n                alert(\"Customer Does Not Exist.\\n Try Again.\")\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    const handleSubmit2 = async (e) => {\n        e.preventDefault()\n        let customerInfo = props.customerState\n        try {\n            let firstName = props.customerState.firstName\n            let lastName = props.customerState.lastName\n            let dob = props.customerState.dob\n\n            const response1 = await __GetCustomer({ firstName, lastName, dob })\n            if (response1) {\n                const response2 = await __GetCustomerAccounts({ customerId: response1.id })\n                props.addCustomer(response1)\n                // props.setAccounts(response2)\n                props.history.push('customerInfo')\n            }\n            else {\n                alert(\"Customer Does Not Exist.\\n Try Again.\")\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return (\n        <div className=\"SearchBy-page\">\n            <h1 className=\"search-title\">Search By:</h1>\n            <form className=\"search-form\" onSubmit={handleSubmit}>\n                <h3 className=\"acct-search\">Account Number</h3>\n                <TextInput\n                    className=\"form-1\"\n                    placeholder=\"ACCOUNT NUMBER\"\n                    name=\"account\"\n                    type=\"account\"\n                    onChange={handleChange}\n                />\n                <button className=\"search-button\">\n                    Search\n                </button>\n            </form>\n            <div className=\"separator\"></div>\n            <form className=\"search-form\" onSubmit={handleSubmit2}>\n                <h3 className=\"acct-search\">Customer Information</h3>\n                <TextInput\n                    placeholder=\"FIRST NAME\"\n                    name=\"firstName\"\n                    type=\"firstName\"\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"LAST NAME\"\n                    name=\"lastName\"\n                    type=\"lastName\"\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"DOB (mm-dd-yyyy)\"\n                    name=\"dob\"\n                    type=\"dob\"\n                    onChange={handleChange}\n                />\n                <button className=\"search-button\">\n                    Search\n                </button>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customerState: state.customerState,\n        accountState: state.AccountSTate\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        search: (term) => dispatch(SearchTerm(term)),\n        addCustomer: (customer) => dispatch(AddCustomer(customer)),\n        setAccounts: (checking, saving) => dispatch(SetAccounts(checking, saving)),\n        setFirstName: (name) => dispatch(AddFirstName(name)),\n        setLastName: (name) => dispatch(AddLastName(name)),\n        setDob: (dob) => dispatch(AddDob(dob)),\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SearchBy)","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/NewTeller.js",["149","150"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport NavBar from '../components/NavBar'\nimport RadioButtons from '../components/RadioButtons'\nimport BalanceSheet from '../components/BalanceSheet'\nimport PopUp from '../components/PopUp'\nimport { __CreateTeller } from '../services/TellerServices'\n\nimport {\n    SetNewUserId,\n    SetNewUserPassword,\n    SetTellerDrawer\n} from '../store/actions/TellerActions'\nimport '../styles/NewTeller.css'\n\nconst NewTeller = (props) => {\n    console.log('inside new teller', props)\n    const [admin, setAdmin] = useState('')\n    const [userId, setUserId] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        if (e.target.name === 'userId') {\n            setUserId(e.target.value)\n        }\n        else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n        else {\n            setAdmin(e.target.value)\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const drawer = parseInt(props.tellerSate.balance).toFixed(2)\n            const response = await __CreateTeller({ userId, password, admin, drawer})\n            if (response.message) {\n                alert('User Id already exists. \\nPlease Try again')\n            }\n            alert('User Created Successfully')\n        } catch (error) {\n            throw error\n        }\n        props.history.push('/main')\n    }\n\n\n    return (\n        <div className=\"newTeller-page\">\n            {/* <NavBar {...props}/> */}\n            <form className=\"form-sign-in\" onSubmit={handleSubmit}>\n                <TextInput\n                    placeholder=\"USER ID\"\n                    name=\"userId\"\n                    type=\"userId\"\n\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"PASSWORD\"\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={handleChange}\n                />\n                <RadioButtons {...props} onChange={handleChange} />\n                <PopUp {...props} />\n                <button className=\"create-button\">\n                    CREATE\n                </button>\n            </form>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createUser: (userId) => dispatch(SetNewUserId(userId)),\n        createPassword: (password) => dispatch(SetNewUserPassword(password)),\n        createDrawer: (amount) => dispatch(SetTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(NewTeller)","/Users/luis/GA/unit3/tms/TMS/client/src/components/RadioButtons.js",["151","152"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst theme = createMuiTheme({\n    typography: {\n        fontSize: 1\n    }\n})\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\"\n    },\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n});\n\nclass RadioButtonsGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            admin: ''\n        }\n    }\n\n\n    handleChange = (event) => {\n        this.setState({ admin: event.target.value });\n        console.log(this.state)\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">ADMIN</FormLabel>\n                    <RadioGroup\n                        aria-label=\"admin\"\n                        name=\"admin\"\n                        className={classes.group}\n                        value={this.state.value}\n                        onChange={(e) => this.props.onChange(e)}\n                    >\n                        <FormControlLabel\n                            value=\"true\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"YES\"\n                            labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                            value=\"false\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"NO\"\n                            labelPlacement=\"start\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nRadioButtonsGroup.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);\n","/Users/luis/GA/unit3/tms/TMS/client/src/services/CustomerServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/CustomerInfo.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerCard.js",["153","154","155","156","157","158"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport '../styles/CustomerInfo.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752\n    },\n    title: {\n        margin: theme.spacing(4, 0, 2)\n    },\n}));\n\n\nexport default function CustomerCard(props) {\n    const classes = useStyles();\n\n    let customerData = props.customerState.customer[0]\n  \n\n    return (\n        <div className=\"customer-info\">\n            <section className=\"headers\">\n                <h2>Name:</h2>\n                <h2>Date of Birth:</h2>\n                <h2>Phone Number:</h2>\n                <h2>Address:</h2>\n                <h2>City, State:</h2>\n            </section>\n            <section className=\"customer-details\">\n                <h2>{customerData.firstName} {customerData.lastName}</h2>\n                <h2>{customerData.dateOfBirth}</h2>\n                <h2>1-800-123-123</h2>\n                <h2>123 Main St</h2>\n                <h2>Springfield, Il</h2>\n            </section>\n        </div>\n    );\n}\n\n\n","/Users/luis/GA/unit3/tms/TMS/client/src/components/AccountView.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerNavBar.js",["159"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Tab from '@material-ui/core/Tab'\n\n\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport '../styles/Nav.css'\nimport { ClearCustomer } from '../store/actions/CustomerActions'\nimport { ClearAccounts } from '../store/actions/AccountActions'\n\n\nconst CustomerNavBar = (props) => {\n    const handleClick = () => {\n        props.clearAccounts()\n        props.clearCustomer()\n    }\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTab: {\n                root: {\n                    fontSize: '1.25rem',\n                    borderTop: '2px solid black',\n                    borderBottom: '2px solid black',\n                    borderLeft: '1px solid black',\n                    borderRight: '1px solid black',\n                    borderRadius: \"2%\",\n                    marginRight: \".001em\"\n                },\n            },\n        },\n    });\n\n    return (\n        <div className=\"customer-nav-bar\">\n            <ThemeProvider theme={theme}>\n\n                <Tab to=\"/withdraw\" component={Link} label=\"Withdraw\" className=\"link\" />\n                <Tab to=\"/deposit\" component={Link} label=\"deposit\" className=\"link\" />\n                <Tab to=\"/transfer\" component={Link} label=\"Transfer\" className=\"link\" />\n                <Tab to=\"/main\" component={Link} label=\"End Session\" className=\"Link\" id=\"action-type\" onClick={handleClick} />\n\n            </ThemeProvider>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customerState: state.customerState,\n        accountState: state.accountState,\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        clearCustomer: () => dispatch(ClearCustomer()),\n        clearAccounts: () => dispatch(ClearAccounts()),\n    }\n}\nexport default connect(mapStateToProps, mapActionsToProps)(CustomerNavBar)\n","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/CustomerActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/types.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/index.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/CustomerReducer.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Withdraw.js",["160","161"],"/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/AccountReducer.js",["162","163"],"/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/AccountActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/SignInPage.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/TellerActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/TellerReducer.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/services/AccountServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/deposit.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Deposit.js",["164","165"],"/Users/luis/GA/unit3/tms/TMS/client/src/components/BalanceSheet.js",["166","167"],"import React, { useState, useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport TextInput from './TextInput'\nimport '../styles/BalanceSheet.css'\nimport { SetTellerDrawer } from '../store/actions/TellerActions'\n\nconst BalanceSheet = (props) => {\n    const [penny, setPenny] = useState(0)\n    const [nickel, setNickel] = useState(0)\n    const [dime, setDime] = useState(0)\n    const [quarter, setQuarter] = useState(0)\n    const [halfDollar, setHalfDollar] = useState(0)\n    const [ones, setOnes] = useState(0)\n    const [fives, setFives] = useState(0)\n    const [tens, setTens] = useState(0)\n    const [twenties, setTwenties] = useState(0)\n    const [fifties, setFifties] = useState(0)\n    const [hundreds, setHundreds] = useState(0)\n    const [total, setTotal] = useState(0)\n\n\n    useEffect(() => {\n        setTotal((parseFloat(penny) + parseFloat(nickel) + parseFloat(dime) + parseFloat(quarter) + parseFloat(halfDollar) + parseFloat(ones) + parseFloat(fives) + parseFloat(tens) + parseFloat(twenties) + parseFloat(fifties) + parseFloat(hundreds)).toFixed(2))\n    }, )\n\n    const handleChange = (e, setFunction) => {\n        e.preventDefault()\n        setFunction(parseFloat(e.target.name) * parseFloat(e.target.value))\n    }\n\n    const handleClick = (e) => {\n        console.log('worked', props)\n        props.createDrawer(total)\n    }\n\n    return (\n        <div className=\"balance-sheet-container\">\n            {console.log('inside return', hundreds)}\n            <h3 className=\"balance-title\">Drawer</h3>\n            <div className=\"table\">\n                <div className=\"denominations\">\n                    <input className=\"balance-values\" value=\"$100\" />\n                    <input className=\"balance-values\" value=\"$50\" />\n                    <input className=\"balance-values\" value=\"$20\" />\n                    <input value=\"$10\" className=\"balance-values\" />\n                    <input value=\"$5\" className=\"balance-values\" />\n                    <input value=\"$1\" className=\"balance-values\" />\n                    <input value=\"$.50\" className=\"balance-values\" />\n                    <input value=\"$.25\" className=\"balance-values\" />\n                    <input value=\"$.10\" className=\"balance-values\" />\n                    <input value=\"$.05\" className=\"balance-values\" />\n                    <input value=\"$.01\" className=\"balance-values\" />\n                </div>\n                <div className=\"count\">\n                    <input name=\"100\" type=\"number\" onChange={(e) => handleChange(e, setHundreds)} className=\"balance-values\" />\n                    <input name=\"50\" type=\"number\" onChange={(e) => handleChange(e, setFifties)} className=\"balance-values\" />\n                    <input name=\"20\" type=\"number\" onChange={(e) => handleChange(e, setTwenties)} className=\"balance-values\" />\n                    <input name=\"10\" type=\"number\" onChange={(e) => handleChange(e, setTens)} className=\"balance-values\" />\n                    <input name=\"5\" type=\"number\" onChange={(e) => handleChange(e, setFives)} className=\"balance-values\" />\n                    <input name=\"1\" type=\"number\" onChange={(e) => handleChange(e, setOnes)} className=\"balance-values\" />\n                    <input name=\".5\" type=\"number\" onChange={(e) => handleChange(e, setHalfDollar)} className=\"balance-values\" />\n                    <input name=\".25\" type=\"number\" onChange={(e) => handleChange(e, setQuarter)} className=\"balance-values\" />\n                    <input name=\".10\" type=\"number\" onChange={(e) => handleChange(e, setDime)} className=\"balance-values\" />\n                    <input name=\".05\" type=\"number\" onChange={(e) => handleChange(e, setNickel)} className=\"balance-values\" />\n                    <input name=\".01\" type=\"number\" onChange={(e) => handleChange(e, setPenny)} className=\"balance-values\" />\n                </div>\n            </div>\n            <div className=\"total\">\n                <h3>total: ${total}</h3>\n            </div>\n            <button className=\"submit-balance\" onClick={handleClick}>\n                SUBMIT\n            </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createDrawer: (amount) => dispatch(SetTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(BalanceSheet)\n\n","/Users/luis/GA/unit3/tms/TMS/client/src/components/PopUp.js",["168"],"import React from 'react';\nimport Modal from 'react-modal';\nimport BalanceSheet from './BalanceSheet';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        height: '90%',\n        width: '30%'\n    }\n};\n\n\n\nfunction PopUp(props) {\n    var subtitle;\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    function openModal() {\n        setIsOpen(true);\n    }\n\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <button onClick={openModal}>Open Modal</button>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <BalanceSheet {...props} />\n            </Modal>\n        </div>\n    );\n}\n\n\nexport default PopUp","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Drawer.js",["169","170"],"import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport '../styles/BalanceSheet.css'\nimport { SetTellerDrawer } from '../store/actions/TellerActions'\nimport { __BalanceTeller } from '../services/TellerServices'\n\nconst Drawer = (props) => {\n    const [penny, setPenny] = useState(0)\n    const [nickel, setNickel] = useState(0)\n    const [dime, setDime] = useState(0)\n    const [quarter, setQuarter] = useState(0)\n    const [halfDollar, setHalfDollar] = useState(0)\n    const [ones, setOnes] = useState(0)\n    const [fives, setFives] = useState(0)\n    const [tens, setTens] = useState(0)\n    const [twenties, setTwenties] = useState(0)\n    const [fifties, setFifties] = useState(0)\n    const [hundreds, setHundreds] = useState(0)\n    const [total, setTotal] = useState(0)\n\n\n    useEffect(() => {\n        setTotal((parseFloat(penny) + parseFloat(nickel) + parseFloat(dime) + parseFloat(quarter) + parseFloat(halfDollar) + parseFloat(ones) + parseFloat(fives) + parseFloat(tens) + parseFloat(twenties) + parseFloat(fifties) + parseFloat(hundreds)).toFixed(2))\n    })\n\n    const handleChange = (e, setFunction) => {\n        e.preventDefault()\n        setFunction(parseFloat(e.target.name) * parseFloat(e.target.value))\n    }\n\n    const handleClick = async (e) => {\n        props.createDrawer(total)\n        let userId = props.tellerSate.userId\n        let drawer = props.tellerSate.balance\n        try {\n            let balanced = await __BalanceTeller({ userId, drawer })\n            if(!balanced) {\n                alert('Drawer Balanced')\n                props.history.push('/main')\n            }\n            else {\n                alert('Drawer Not Balanced')\n                props.history.push('/main')\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return (\n        <div className=\"balance-sheet-container\">\n            \n            <h3 className=\"balance-title\">Drawer</h3>\n            <div className=\"table\">\n                <div className=\"denominations\">\n                    <input className=\"balance-values\" value=\"$100\" />\n                    <input className=\"balance-values\" value=\"$50\" />\n                    <input className=\"balance-values\" value=\"$20\" />\n                    <input value=\"$10\" className=\"balance-values\" />\n                    <input value=\"$5\" className=\"balance-values\" />\n                    <input value=\"$1\" className=\"balance-values\" />\n                    <input value=\"$.50\" className=\"balance-values\" />\n                    <input value=\"$.25\" className=\"balance-values\" />\n                    <input value=\"$.10\" className=\"balance-values\" />\n                    <input value=\"$.05\" className=\"balance-values\" />\n                    <input value=\"$.01\" className=\"balance-values\" />\n                </div>\n                <div className=\"count\">\n                    <input name=\"100\" type=\"number\" onChange={(e) => handleChange(e, setHundreds)} className=\"balance-values\" />\n                    <input name=\"50\" type=\"number\" onChange={(e) => handleChange(e, setFifties)} className=\"balance-values\" />\n                    <input name=\"20\" type=\"number\" onChange={(e) => handleChange(e, setTwenties)} className=\"balance-values\" />\n                    <input name=\"10\" type=\"number\" onChange={(e) => handleChange(e, setTens)} className=\"balance-values\" />\n                    <input name=\"5\" type=\"number\" onChange={(e) => handleChange(e, setFives)} className=\"balance-values\" />\n                    <input name=\"1\" type=\"number\" onChange={(e) => handleChange(e, setOnes)} className=\"balance-values\" />\n                    <input name=\".5\" type=\"number\" onChange={(e) => handleChange(e, setHalfDollar)} className=\"balance-values\" />\n                    <input name=\".25\" type=\"number\" onChange={(e) => handleChange(e, setQuarter)} className=\"balance-values\" />\n                    <input name=\".10\" type=\"number\" onChange={(e) => handleChange(e, setDime)} className=\"balance-values\" />\n                    <input name=\".05\" type=\"number\" onChange={(e) => handleChange(e, setNickel)} className=\"balance-values\" />\n                    <input name=\".01\" type=\"number\" onChange={(e) => handleChange(e, setPenny)} className=\"balance-values\" />\n                </div>\n            </div>\n            <div className=\"total\">\n                <h3>total: ${total}</h3>\n            </div>\n            <button className=\"submit-balance\" onClick={handleClick}>\n                SUBMIT\n            </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createDrawer: (amount) => dispatch(SetTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Drawer)\n\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":35,"column":91,"nodeType":"181","endLine":35,"endColumn":105},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":22,"column":9,"nodeType":"184","messageId":"185","endLine":35,"endColumn":10},{"ruleId":"175","severity":1,"message":"186","line":60,"column":13,"nodeType":"177","messageId":"178","endLine":60,"endColumn":25},{"ruleId":"175","severity":1,"message":"187","line":68,"column":23,"nodeType":"177","messageId":"178","endLine":68,"endColumn":32},{"ruleId":"175","severity":1,"message":"188","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":14},{"ruleId":"175","severity":1,"message":"189","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"190","line":10,"column":7,"nodeType":"177","messageId":"178","endLine":10,"endColumn":12},{"ruleId":"175","severity":1,"message":"191","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":12},{"ruleId":"175","severity":1,"message":"192","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":16},{"ruleId":"175","severity":1,"message":"193","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":12},{"ruleId":"175","severity":1,"message":"194","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":18},{"ruleId":"175","severity":1,"message":"195","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":20},{"ruleId":"175","severity":1,"message":"196","line":22,"column":11,"nodeType":"177","messageId":"178","endLine":22,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"197","line":13,"column":8,"nodeType":"177","messageId":"178","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"198","line":37,"column":9,"nodeType":"177","messageId":"178","endLine":37,"endColumn":17},{"ruleId":"175","severity":1,"message":"199","line":47,"column":17,"nodeType":"177","messageId":"178","endLine":47,"endColumn":31},{"ruleId":"200","severity":1,"message":"201","line":47,"column":75,"nodeType":"202","messageId":"203","endLine":47,"endColumn":77},{"ruleId":"175","severity":1,"message":"197","line":13,"column":8,"nodeType":"177","messageId":"178","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"198","line":34,"column":9,"nodeType":"177","messageId":"178","endLine":34,"endColumn":17},{"ruleId":"175","severity":1,"message":"204","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":22,"column":5,"nodeType":"177","endLine":22,"endColumn":14,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"208","line":21,"column":9,"nodeType":"177","messageId":"178","endLine":21,"endColumn":17},{"ruleId":"175","severity":1,"message":"204","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":23,"column":5,"nodeType":"177","endLine":23,"endColumn":14,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'customerInfo' is assigned a value but never used.","'response2' is assigned a value but never used.","'NavBar' is defined but never used.","'BalanceSheet' is defined but never used.","'theme' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'ListItemText' is defined but never used.","'classes' is assigned a value but never used.","'Button' is defined but never used.","'accounts' is assigned a value but never used.","'updatedAccount' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TextInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds] as a second argument to the useEffect Hook.",["212"],"'subtitle' is defined but never used.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},"Add dependencies array: [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds]",{"range":"217","text":"218"},{"range":"219","text":"218"},[1080,1080],", [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds]",[1149,1149]]