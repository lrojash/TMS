[{"/Users/luis/GA/unit3/tms/TMS/client/src/index.js":"1","/Users/luis/GA/unit3/tms/TMS/client/src/App.js":"2","/Users/luis/GA/unit3/tms/TMS/client/src/components/TextInput.js":"3","/Users/luis/GA/unit3/tms/TMS/client/src/components/NavBar.js":"4","/Users/luis/GA/unit3/tms/TMS/client/src/services/TellerServices.js":"5","/Users/luis/GA/unit3/tms/TMS/client/src/services/ApiClient.js":"6","/Users/luis/GA/unit3/tms/TMS/client/src/components/Router.js":"7","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/MainPage.js":"8","/Users/luis/GA/unit3/tms/TMS/client/src/components/SearchBy.js":"9","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/NewTeller.js":"10","/Users/luis/GA/unit3/tms/TMS/client/src/components/RadioButtons.js":"11","/Users/luis/GA/unit3/tms/TMS/client/src/services/CustomerServices.js":"12","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/CustomerInfo.js":"13","/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerCard.js":"14","/Users/luis/GA/unit3/tms/TMS/client/src/components/AccountView.js":"15","/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerNavBar.js":"16","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/CustomerActions.js":"17","/Users/luis/GA/unit3/tms/TMS/client/src/store/types.js":"18","/Users/luis/GA/unit3/tms/TMS/client/src/store/index.js":"19","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/CustomerReducer.js":"20","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Withdraw.js":"21","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/AccountReducer.js":"22","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/AccountActions.js":"23","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/SignInPage.js":"24","/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/TellerActions.js":"25","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/TellerReducer.js":"26","/Users/luis/GA/unit3/tms/TMS/client/src/services/AccountServices.js":"27","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/deposit.js":"28","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Deposit.js":"29","/Users/luis/GA/unit3/tms/TMS/client/src/components/BalanceSheet.js":"30","/Users/luis/GA/unit3/tms/TMS/client/src/components/PopUp.js":"31","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Drawer.js":"32"},{"size":448,"mtime":1609952790858,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1609952627524,"results":"35","hashOfConfig":"34"},{"size":627,"mtime":1610387161794,"results":"36","hashOfConfig":"34"},{"size":1558,"mtime":1611376524770,"results":"37","hashOfConfig":"34"},{"size":658,"mtime":1610399547347,"results":"38","hashOfConfig":"34"},{"size":769,"mtime":1610373670195,"results":"39","hashOfConfig":"34"},{"size":1727,"mtime":1610397928185,"results":"40","hashOfConfig":"34"},{"size":531,"mtime":1610308166529,"results":"41","hashOfConfig":"34"},{"size":4629,"mtime":1611332433331,"results":"42","hashOfConfig":"34"},{"size":2826,"mtime":1610397139052,"results":"43","hashOfConfig":"34"},{"size":2323,"mtime":1609867029883,"results":"44","hashOfConfig":"34"},{"size":448,"mtime":1609963948792,"results":"45","hashOfConfig":"34"},{"size":1120,"mtime":1611334049128,"results":"46","hashOfConfig":"34"},{"size":2179,"mtime":1611375139835,"results":"47","hashOfConfig":"34"},{"size":2391,"mtime":1611373472357,"results":"48","hashOfConfig":"34"},{"size":1957,"mtime":1611379908102,"results":"49","hashOfConfig":"34"},{"size":733,"mtime":1611379774156,"results":"50","hashOfConfig":"34"},{"size":1508,"mtime":1611379666955,"results":"51","hashOfConfig":"34"},{"size":584,"mtime":1610034516717,"results":"52","hashOfConfig":"34"},{"size":1133,"mtime":1611380006139,"results":"53","hashOfConfig":"34"},{"size":5183,"mtime":1610379879805,"results":"54","hashOfConfig":"34"},{"size":1125,"mtime":1611379593928,"results":"55","hashOfConfig":"34"},{"size":807,"mtime":1611379644051,"results":"56","hashOfConfig":"34"},{"size":2146,"mtime":1610397601002,"results":"57","hashOfConfig":"34"},{"size":741,"mtime":1610395441666,"results":"58","hashOfConfig":"34"},{"size":996,"mtime":1610395364814,"results":"59","hashOfConfig":"34"},{"size":700,"mtime":1610339140437,"results":"60","hashOfConfig":"34"},{"size":0,"mtime":1610127919075,"results":"61","hashOfConfig":"34"},{"size":5048,"mtime":1610380042726,"results":"62","hashOfConfig":"34"},{"size":4404,"mtime":1610398939699,"results":"63","hashOfConfig":"34"},{"size":976,"mtime":1610395084662,"results":"64","hashOfConfig":"34"},{"size":4877,"mtime":1610401868423,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"qt3xuh",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},"/Users/luis/GA/unit3/tms/TMS/client/src/index.js",[],["140","141"],"/Users/luis/GA/unit3/tms/TMS/client/src/App.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/TextInput.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/NavBar.js",["142","143"],"/Users/luis/GA/unit3/tms/TMS/client/src/services/TellerServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/services/ApiClient.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/Router.js",["144"],"import React, { useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport MainPage from '../Pages/MainPage'\nimport NewTeller from '../Pages/NewTeller'\nimport CustomerInfo from '../Pages/CustomerInfo'\nimport Withdraw from '../Pages/Withdraw'\nimport SignInPage from '../Pages/SignInPage'\nimport Deposit from '../Pages/Deposit'\nimport Drawer from '../Pages/Drawer'\n\nconst Router = () => {\n\n\n\n\n    return (\n        <main>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    component={(props) => <SignInPage {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/main\"\n                    component={(props) => <MainPage {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/newTeller\"\n                    component={(props) => <NewTeller {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/customerInfo\"\n                    component={(props) => <CustomerInfo {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/withdraw\"\n                    component={(props) => <Withdraw {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/deposit\"\n                    component={(props) => <Deposit {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/drawer\"\n                    component={(props) => <Drawer {...props} />}\n                />\n            </Switch>\n        </main>\n    )\n}\n\nexport default Router","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/MainPage.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/SearchBy.js",["145","146"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from './TextInput'\nimport { __GetCustomer, __GetCustomerAccounts } from '../services/CustomerServices'\n\nimport {\n    AddCustomer,\n    AddAccount,\n    SearchTerm,\n    AddFirstName,\n    AddLastName,\n    AddDob\n} from '../store/actions/CustomerActions'\nimport { SetAccounts } from '../store/actions/AccountActions'\nimport '../styles/Search.css'\n\n\nconst SearchBy = (props) => {\n\n\n    const handleChange = (e) => {\n\n        switch (e.target.name) {\n            case \"account\":\n                props.search(e.target.value)\n                return\n            case \"firstName\":\n                props.setFirstName(e.target.value)\n                return\n            case \"lastName\":\n                props.setLastName(e.target.value)\n                return\n            case \"dob\":\n                props.setDob(e.target.value)\n                return\n        }\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let customerId = props.customerState.searchTerm\n        try {\n            const response1 = await __GetCustomer({ customerId })\n            if (response1) {\n                const response2 = await __GetCustomerAccounts({ customerId })\n                props.addCustomer(response1)\n                props.setAccounts(response2)\n                props.history.push('/customerInfo')\n            }\n            else {\n                alert(\"Customer Does Not Exist.\\n Try Again.\")\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    const handleSubmit2 = async (e) => {\n        e.preventDefault()\n        let customerInfo = props.customerState\n        console.log('inside submit 2: ', customerInfo)\n        try {\n            let firstName = props.customerState.firstName\n            let lastName = props.customerState.lastName\n            let dob = props.customerState.dob\n\n            const response1 = await __GetCustomer({ firstName, lastName, dob })\n            if (response1) {\n                const response2 = await __GetCustomerAccounts({ customerId: response1.id })\n                props.addCustomer(response1)\n                props.setAccounts(response2)\n                props.history.push('customerInfo')\n            }\n            else {\n                alert(\"Customer Does Not Exist.\\n Try Again.\")\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return (\n        <div className=\"SearchBy-page\">\n            <h1 className=\"search-title\">Search By:</h1>\n            <form className=\"search-form\" onSubmit={handleSubmit}>\n                <h3 classname=\"acct-search\">Account Number</h3>\n                <TextInput\n                    className=\"form-1\"\n                    placeholder=\"ACCOUNT NUMBER\"\n                    name=\"account\"\n                    type=\"account\"\n                    onChange={handleChange}\n                />\n                <button className=\"search-button\">\n                    Search\n                </button>\n            </form>\n            <div className=\"separator\"></div>\n            <form className=\"search-form\" onSubmit={handleSubmit2}>\n                <h3 className=\"acct-search\">Customer Information</h3>\n                <TextInput\n                    placeholder=\"FIRST NAME\"\n                    name=\"firstName\"\n                    type=\"firstName\"\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"LAST NAME\"\n                    name=\"lastName\"\n                    type=\"lastName\"\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"DOB (mm-dd-yyyy)\"\n                    name=\"dob\"\n                    type=\"dob\"\n                    onChange={handleChange}\n                />\n                <button className=\"search-button\">\n                    Search\n                </button>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customerState: state.customerState,\n        accountState: state.AccountSTate\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        search: (term) => dispatch(SearchTerm(term)),\n        addCustomer: (customer) => dispatch(AddCustomer(customer)),\n        setAccounts: (accounts) => dispatch(SetAccounts(accounts)),\n        setFirstName: (name) => dispatch(AddFirstName(name)),\n        setLastName: (name) => dispatch(AddLastName(name)),\n        setDob: (dob) => dispatch(AddDob(dob)),\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SearchBy)","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/NewTeller.js",["147","148"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport NavBar from '../components/NavBar'\nimport RadioButtons from '../components/RadioButtons'\nimport BalanceSheet from '../components/BalanceSheet'\nimport PopUp from '../components/PopUp'\nimport { __CreateTeller } from '../services/TellerServices'\n\nimport {\n    setNewUserId,\n    setNewUserPassword,\n    setTellerDrawer\n} from '../store/actions/TellerActions'\nimport '../styles/NewTeller.css'\n\nconst NewTeller = (props) => {\n    console.log('inside new teller', props)\n    const [admin, setAdmin] = useState('')\n    const [userId, setUserId] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        if (e.target.name === 'userId') {\n            setUserId(e.target.value)\n        }\n        else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n        else {\n            setAdmin(e.target.value)\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const drawer = parseInt(props.tellerSate.balance).toFixed(2)\n            const response = await __CreateTeller({ userId, password, admin, drawer})\n            if (response.message) {\n                alert('User Id already exists. \\nPlease Try again')\n            }\n            alert('User Created Successfully')\n        } catch (error) {\n            throw error\n        }\n        props.history.push('/main')\n    }\n\n\n    return (\n        <div className=\"newTeller-page\">\n            {/* <NavBar {...props}/> */}\n            <form className=\"form-sign-in\" onSubmit={handleSubmit}>\n                <TextInput\n                    placeholder=\"USER ID\"\n                    name=\"userId\"\n                    type=\"userId\"\n\n                    onChange={handleChange}\n                />\n                <TextInput\n                    placeholder=\"PASSWORD\"\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={handleChange}\n                />\n                <RadioButtons {...props} onChange={handleChange} />\n                <PopUp {...props} />\n                <button className=\"create-button\">\n                    CREATE\n                </button>\n            </form>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createUser: (userId) => dispatch(setNewUserId(userId)),\n        createPassword: (password) => dispatch(setNewUserPassword(password)),\n        createDrawer: (amount) => dispatch(setTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(NewTeller)","/Users/luis/GA/unit3/tms/TMS/client/src/components/RadioButtons.js",["149","150"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst theme = createMuiTheme({\n    typography: {\n        fontSize: 1\n    }\n})\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\"\n    },\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n});\n\nclass RadioButtonsGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            admin: ''\n        }\n    }\n\n\n    handleChange = (event) => {\n        this.setState({ admin: event.target.value });\n        console.log(this.state)\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">ADMIN</FormLabel>\n                    <RadioGroup\n                        aria-label=\"admin\"\n                        name=\"admin\"\n                        className={classes.group}\n                        value={this.state.value}\n                        onChange={(e) => this.props.onChange(e)}\n                    >\n                        <FormControlLabel\n                            value=\"true\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"YES\"\n                            labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                            value=\"false\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"NO\"\n                            labelPlacement=\"start\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nRadioButtonsGroup.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);\n","/Users/luis/GA/unit3/tms/TMS/client/src/services/CustomerServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/CustomerInfo.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerCard.js",["151","152","153","154","155","156"],"/Users/luis/GA/unit3/tms/TMS/client/src/components/AccountView.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/components/CustomerNavBar.js",["157"],"/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/CustomerActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/types.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/index.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/CustomerReducer.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Withdraw.js",["158","159"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport CustomerNavBar from '../components/CustomerNavBar'\nimport { __Update, __GetAccount } from '../services/AccountServices'\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nimport { SetAmount, SetAccountFrom, SetAccountTypeFrom } from '../store/actions/AccountActions'\n\n\nimport '../styles/Action.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst Withdraw = (props) => {\n\n    let checkingAccounts = props.accountState.accounts[0][0].Checkings\n    let savingAccounts = props.accountState.accounts[0][0].Savings\n    let accounts = [...checkingAccounts, ...savingAccounts]\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        console.log('inside handle change: ', e.target.value)\n        if (e.target.name === 'amount') {\n            props.setAmount(e.target.value)\n        }\n        else {\n            let accountNumber = e.target.value\n            props.setAcct(accountNumber)\n        }\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log('inside the submit: ', props.accountState)\n        let amount = props.accountState.amount\n        let accountNumber = props.accountState.accountFrom\n        let action = \"withdraw\"\n        let customerNumber = props.customerState.searchTerm\n\n        try {\n            let account = await __GetAccount({ accountNumber, customerNumber })\n            let accountType = props.setType(account)\n            let accountAction = await __Update({ amount, accountNumber, action, customerNumber, accountType })\n            console.log('after await: ', accountAction)\n            if (accountAction) {\n                alert(\"Withdraw Successful\")\n                props.history.push('/customerInfo')\n            }\n        } catch (error) {\n            throw error\n        }\n\n    }\n\n\n\n\n\n    return (\n        <div>\n            <CustomerNavBar {...props} />\n            {/* <Button className={classes.button} onClick={handleOpen}>\n                Select Account\n            </Button> */}\n            <div className=\"action-form\">\n                <h3 className=\"action-title\">Select Account</h3>\n                <form className=\"withdraw-form\" onSubmit={handleSubmit}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-controlled-open-select-label\">Select</InputLabel>\n                        <Select\n                            labelId=\"demo-controlled-open-select-label\"\n                            id=\"demo-controlled-open-select\"\n                            open={open}\n                            onClose={handleClose}\n                            onOpen={handleOpen}\n                            // value={age}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {\n                                checkingAccounts.map((account, index) => (\n                                    <MenuItem key={index} value={account.checking_number}>{account.type}-{account.balance}</MenuItem>\n                                ))\n                            }\n                            {\n                                savingAccounts.map((account, index) => (\n                                    <MenuItem key={index} value={account.saving_number}>{account.type}-{account.balance}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextInput\n                        placeholder=\"AMOUNT\"\n                        name=\"amount\"\n                        type=\"amount\"\n                        onChange={handleChange}\n                    />\n                    <button className=\"withdraw-submit\">\n                        CONFIRM\n                 </button>\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountState: state.accountState,\n        customerState: state.customerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        setAmount: (amount) => dispatch(SetAmount(amount)),\n        setAcct: (acctNum) => dispatch(SetAccountFrom(acctNum)),\n        setType: (type) => dispatch(SetAccountTypeFrom(type))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Withdraw)","/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/AccountReducer.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/AccountActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/SignInPage.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/actions/TellerActions.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/store/reducers/TellerReducer.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/services/AccountServices.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/deposit.js",[],"/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Deposit.js",["160","161"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport CustomerNavBar from '../components/CustomerNavBar'\nimport { __Update, __GetAccount } from '../services/AccountServices'\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport '../styles/Action.css'\n\nimport { SetAmount, SetAccountFrom, SetAccountTypeFrom } from '../store/actions/AccountActions'\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst Withdraw = (props) => {\n\n    let checkingAccounts = props.accountState.accounts[0][0].Checkings\n    let savingAccounts = props.accountState.accounts[0][0].Savings\n    let accounts = [...checkingAccounts, ...savingAccounts]\n\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        console.log('inside handle change: ', e.target.value)\n        if (e.target.name === 'amount') {\n            props.setAmount(e.target.value)\n        }\n        else {\n            let accountNumber = e.target.value\n            props.setAcct(accountNumber)\n        }\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        console.log('inside the submit: ', props.accountState)\n        let amount = props.accountState.amount\n        let accountNumber = props.accountState.accountFrom\n        let action = \"deposit\"\n        let customerNumber = props.customerState.searchTerm\n\n        try {\n            let account = await __GetAccount({ accountNumber, customerNumber })\n            let accountType = props.setType(account)\n            let accountAction = await __Update({ amount, accountNumber, action, customerNumber, accountType })\n            console.log('after await: ', accountAction)\n            if (accountAction) {\n                alert(\"Deposit Successful\")\n                props.history.push('/customerInfo')\n            }\n        } catch (error) {\n            throw error\n        }\n\n    }\n\n\n\n\n\n    return (\n        <div>\n            <CustomerNavBar {...props} />\n            <div className=\"action-form\">\n                <h3 className=\"action-title\">Select Account</h3>\n                <form className=\"withdraw-form\" onSubmit={handleSubmit}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-controlled-open-select-label\">Select</InputLabel>\n                        <Select\n                            labelId=\"demo-controlled-open-select-label\"\n                            id=\"demo-controlled-open-select\"\n                            open={open}\n                            onClose={handleClose}\n                            onOpen={handleOpen}\n                            // value={age}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {\n                                checkingAccounts.map((account, index) => (\n                                    <MenuItem key={index} value={account.checking_number}>{account.type}-{account.balance}</MenuItem>\n                                ))\n                            }\n                            {\n                                savingAccounts.map((account, index) => (\n                                    <MenuItem key={index} value={account.saving_number}>{account.type}-{account.balance}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextInput\n                        placeholder=\"AMOUNT\"\n                        name=\"amount\"\n                        type=\"amount\"\n                        onChange={handleChange}\n                    />\n                    <button className=\"withdraw-submit\">\n                        CONFIRM\n                 </button>\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountState: state.accountState,\n        customerState: state.customerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        setAmount: (amount) => dispatch(SetAmount(amount)),\n        setAcct: (acctNum) => dispatch(SetAccountFrom(acctNum)),\n        setType: (type) => dispatch(SetAccountTypeFrom(type))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Withdraw)","/Users/luis/GA/unit3/tms/TMS/client/src/components/BalanceSheet.js",["162","163"],"import React, { useState, useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport TextInput from './TextInput'\nimport '../styles/BalanceSheet.css'\nimport { setTellerDrawer } from '../store/actions/TellerActions'\n\nconst BalanceSheet = (props) => {\n    const [penny, setPenny] = useState(0)\n    const [nickel, setNickel] = useState(0)\n    const [dime, setDime] = useState(0)\n    const [quarter, setQuarter] = useState(0)\n    const [halfDollar, setHalfDollar] = useState(0)\n    const [ones, setOnes] = useState(0)\n    const [fives, setFives] = useState(0)\n    const [tens, setTens] = useState(0)\n    const [twenties, setTwenties] = useState(0)\n    const [fifties, setFifties] = useState(0)\n    const [hundreds, setHundreds] = useState(0)\n    const [total, setTotal] = useState(0)\n\n\n    useEffect(() => {\n        setTotal((parseFloat(penny) + parseFloat(nickel) + parseFloat(dime) + parseFloat(quarter) + parseFloat(halfDollar) + parseFloat(ones) + parseFloat(fives) + parseFloat(tens) + parseFloat(twenties) + parseFloat(fifties) + parseFloat(hundreds)).toFixed(2))\n    }, )\n\n    const handleChange = (e, setFunction) => {\n        e.preventDefault()\n        setFunction(parseFloat(e.target.name) * parseFloat(e.target.value))\n    }\n\n    const handleClick = (e) => {\n        console.log('worked', props)\n        props.createDrawer(total)\n    }\n\n    return (\n        <div className=\"balance-sheet-container\">\n            {console.log('inside return', hundreds)}\n            <h3 className=\"balance-title\">Drawer</h3>\n            <div className=\"table\">\n                <div className=\"denominations\">\n                    <input className=\"balance-values\" value=\"$100\" />\n                    <input className=\"balance-values\" value=\"$50\" />\n                    <input className=\"balance-values\" value=\"$20\" />\n                    <input value=\"$10\" className=\"balance-values\" />\n                    <input value=\"$5\" className=\"balance-values\" />\n                    <input value=\"$1\" className=\"balance-values\" />\n                    <input value=\"$.50\" className=\"balance-values\" />\n                    <input value=\"$.25\" className=\"balance-values\" />\n                    <input value=\"$.10\" className=\"balance-values\" />\n                    <input value=\"$.05\" className=\"balance-values\" />\n                    <input value=\"$.01\" className=\"balance-values\" />\n                </div>\n                <div className=\"count\">\n                    <input name=\"100\" type=\"number\" onChange={(e) => handleChange(e, setHundreds)} className=\"balance-values\" />\n                    <input name=\"50\" type=\"number\" onChange={(e) => handleChange(e, setFifties)} className=\"balance-values\" />\n                    <input name=\"20\" type=\"number\" onChange={(e) => handleChange(e, setTwenties)} className=\"balance-values\" />\n                    <input name=\"10\" type=\"number\" onChange={(e) => handleChange(e, setTens)} className=\"balance-values\" />\n                    <input name=\"5\" type=\"number\" onChange={(e) => handleChange(e, setFives)} className=\"balance-values\" />\n                    <input name=\"1\" type=\"number\" onChange={(e) => handleChange(e, setOnes)} className=\"balance-values\" />\n                    <input name=\".5\" type=\"number\" onChange={(e) => handleChange(e, setHalfDollar)} className=\"balance-values\" />\n                    <input name=\".25\" type=\"number\" onChange={(e) => handleChange(e, setQuarter)} className=\"balance-values\" />\n                    <input name=\".10\" type=\"number\" onChange={(e) => handleChange(e, setDime)} className=\"balance-values\" />\n                    <input name=\".05\" type=\"number\" onChange={(e) => handleChange(e, setNickel)} className=\"balance-values\" />\n                    <input name=\".01\" type=\"number\" onChange={(e) => handleChange(e, setPenny)} className=\"balance-values\" />\n                </div>\n            </div>\n            <div className=\"total\">\n                <h3>total: ${total}</h3>\n            </div>\n            <button className=\"submit-balance\" onClick={handleClick}>\n                SUBMIT\n            </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createDrawer: (amount) => dispatch(setTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(BalanceSheet)\n\n","/Users/luis/GA/unit3/tms/TMS/client/src/components/PopUp.js",["164"],"import React from 'react';\nimport Modal from 'react-modal';\nimport BalanceSheet from './BalanceSheet';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        height: '90%',\n        width: '30%'\n    }\n};\n\n\n\nfunction PopUp(props) {\n    var subtitle;\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    function openModal() {\n        setIsOpen(true);\n    }\n\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div>\n            <button onClick={openModal}>Open Modal</button>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <BalanceSheet {...props} />\n            </Modal>\n        </div>\n    );\n}\n\n\nexport default PopUp","/Users/luis/GA/unit3/tms/TMS/client/src/Pages/Drawer.js",["165","166"],"import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport '../styles/BalanceSheet.css'\nimport { setTellerDrawer } from '../store/actions/TellerActions'\nimport { __BalanceTeller } from '../services/TellerServices'\n\nconst Drawer = (props) => {\n    const [penny, setPenny] = useState(0)\n    const [nickel, setNickel] = useState(0)\n    const [dime, setDime] = useState(0)\n    const [quarter, setQuarter] = useState(0)\n    const [halfDollar, setHalfDollar] = useState(0)\n    const [ones, setOnes] = useState(0)\n    const [fives, setFives] = useState(0)\n    const [tens, setTens] = useState(0)\n    const [twenties, setTwenties] = useState(0)\n    const [fifties, setFifties] = useState(0)\n    const [hundreds, setHundreds] = useState(0)\n    const [total, setTotal] = useState(0)\n\n\n    useEffect(() => {\n        setTotal((parseFloat(penny) + parseFloat(nickel) + parseFloat(dime) + parseFloat(quarter) + parseFloat(halfDollar) + parseFloat(ones) + parseFloat(fives) + parseFloat(tens) + parseFloat(twenties) + parseFloat(fifties) + parseFloat(hundreds)).toFixed(2))\n    })\n\n    const handleChange = (e, setFunction) => {\n        e.preventDefault()\n        setFunction(parseFloat(e.target.name) * parseFloat(e.target.value))\n    }\n\n    const handleClick = async (e) => {\n        props.createDrawer(total)\n        let userId = props.tellerSate.userId\n        let drawer = props.tellerSate.balance\n        try {\n            let balanced = await __BalanceTeller({ userId, drawer })\n            if(!balanced) {\n                alert('Drawer Balanced')\n                props.history.push('/main')\n            }\n            else {\n                alert('Drawer Not Balanced')\n                props.history.push('/main')\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    return (\n        <div className=\"balance-sheet-container\">\n            \n            <h3 className=\"balance-title\">Drawer</h3>\n            <div className=\"table\">\n                <div className=\"denominations\">\n                    <input className=\"balance-values\" value=\"$100\" />\n                    <input className=\"balance-values\" value=\"$50\" />\n                    <input className=\"balance-values\" value=\"$20\" />\n                    <input value=\"$10\" className=\"balance-values\" />\n                    <input value=\"$5\" className=\"balance-values\" />\n                    <input value=\"$1\" className=\"balance-values\" />\n                    <input value=\"$.50\" className=\"balance-values\" />\n                    <input value=\"$.25\" className=\"balance-values\" />\n                    <input value=\"$.10\" className=\"balance-values\" />\n                    <input value=\"$.05\" className=\"balance-values\" />\n                    <input value=\"$.01\" className=\"balance-values\" />\n                </div>\n                <div className=\"count\">\n                    <input name=\"100\" type=\"number\" onChange={(e) => handleChange(e, setHundreds)} className=\"balance-values\" />\n                    <input name=\"50\" type=\"number\" onChange={(e) => handleChange(e, setFifties)} className=\"balance-values\" />\n                    <input name=\"20\" type=\"number\" onChange={(e) => handleChange(e, setTwenties)} className=\"balance-values\" />\n                    <input name=\"10\" type=\"number\" onChange={(e) => handleChange(e, setTens)} className=\"balance-values\" />\n                    <input name=\"5\" type=\"number\" onChange={(e) => handleChange(e, setFives)} className=\"balance-values\" />\n                    <input name=\"1\" type=\"number\" onChange={(e) => handleChange(e, setOnes)} className=\"balance-values\" />\n                    <input name=\".5\" type=\"number\" onChange={(e) => handleChange(e, setHalfDollar)} className=\"balance-values\" />\n                    <input name=\".25\" type=\"number\" onChange={(e) => handleChange(e, setQuarter)} className=\"balance-values\" />\n                    <input name=\".10\" type=\"number\" onChange={(e) => handleChange(e, setDime)} className=\"balance-values\" />\n                    <input name=\".05\" type=\"number\" onChange={(e) => handleChange(e, setNickel)} className=\"balance-values\" />\n                    <input name=\".01\" type=\"number\" onChange={(e) => handleChange(e, setPenny)} className=\"balance-values\" />\n                </div>\n            </div>\n            <div className=\"total\">\n                <h3>total: ${total}</h3>\n            </div>\n            <button className=\"submit-balance\" onClick={handleClick}>\n                SUBMIT\n            </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tellerSate: state.tellerState\n    }\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createDrawer: (amount) => dispatch(setTellerDrawer(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Drawer)\n\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":30,"column":91,"nodeType":"177","endLine":30,"endColumn":105},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"178","line":8,"column":5,"nodeType":"173","messageId":"174","endLine":8,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":23,"column":9,"nodeType":"181","messageId":"182","endLine":36,"endColumn":10},{"ruleId":"171","severity":1,"message":"183","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"184","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"185","line":10,"column":7,"nodeType":"173","messageId":"174","endLine":10,"endColumn":12},{"ruleId":"171","severity":1,"message":"186","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":12},{"ruleId":"171","severity":1,"message":"187","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"171","severity":1,"message":"188","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":12},{"ruleId":"171","severity":1,"message":"189","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":18},{"ruleId":"171","severity":1,"message":"190","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":20},{"ruleId":"171","severity":1,"message":"191","line":22,"column":11,"nodeType":"173","messageId":"174","endLine":22,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":13,"column":8,"nodeType":"173","messageId":"174","endLine":13,"endColumn":14},{"ruleId":"171","severity":1,"message":"193","line":36,"column":9,"nodeType":"173","messageId":"174","endLine":36,"endColumn":17},{"ruleId":"171","severity":1,"message":"192","line":13,"column":8,"nodeType":"173","messageId":"174","endLine":13,"endColumn":14},{"ruleId":"171","severity":1,"message":"193","line":33,"column":9,"nodeType":"173","messageId":"174","endLine":33,"endColumn":17},{"ruleId":"171","severity":1,"message":"194","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":22,"column":5,"nodeType":"173","endLine":22,"endColumn":14,"suggestions":"197"},{"ruleId":"171","severity":1,"message":"198","line":21,"column":9,"nodeType":"173","messageId":"174","endLine":21,"endColumn":17},{"ruleId":"171","severity":1,"message":"194","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":23,"column":5,"nodeType":"173","endLine":23,"endColumn":14,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AddAccount' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'NavBar' is defined but never used.","'BalanceSheet' is defined but never used.","'theme' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'ListItemText' is defined but never used.","'classes' is assigned a value but never used.","'Button' is defined but never used.","'accounts' is assigned a value but never used.","'TextInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds] as a second argument to the useEffect Hook.",["202"],"'subtitle' is defined but never used.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},"Add dependencies array: [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds]",{"range":"207","text":"208"},{"range":"209","text":"208"},[1080,1080],", [penny, nickel, dime, quarter, halfDollar, ones, fives, tens, twenties, fifties, hundreds]",[1149,1149]]